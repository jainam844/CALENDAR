{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pca158\\\\Downloads\\\\reacteventcalenderwithnotifications-main\\\\reacteventcalenderwithnotifications-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Calender } from './Calender/calender';\nimport { MockEvents } from './Calender/const';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [events, setEvents] = useState(() => {\n    const storedEvents = localStorage.getItem('events');\n    return storedEvents ? JSON.parse(storedEvents) : MockEvents;\n  });\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n    const timeouts = [];\n    events.forEach(event => {\n      var _event$reminderTime;\n      const [hours, minutes] = ((_event$reminderTime = event.reminderTime) !== null && _event$reminderTime !== void 0 ? _event$reminderTime : \"\").split(\":\").map(Number);\n      if (event.date) {\n        const reminderTime = new Date(parseInt(event.date.slice(0, 4)), parseInt(event.date.slice(5, 7)) - 1, parseInt(event.date.slice(8, 10)));\n        reminderTime.setHours(hours);\n        reminderTime.setMinutes(minutes);\n        if (reminderTime > new Date()) {\n          const timeUntilEvent = reminderTime.getTime() - Date.now();\n          const timeoutId = setTimeout(() => {\n            toast.info(event.title + \"\\nReminder\");\n            const index = timeouts.indexOf(timeoutId);\n            if (index > -1) {\n              timeouts.splice(index, 1);\n            }\n          }, timeUntilEvent);\n          timeouts.push(timeoutId);\n        }\n      }\n    });\n    return () => {\n      timeouts.forEach(timeoutId => clearTimeout(timeoutId));\n    };\n  }, [events]);\n  const addEvent = (data, date) => {\n    const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n    setEvents(prev => [...prev, {\n      date: utcDate.toISOString(),\n      title: data.title,\n      desc: data.desc,\n      EventTime: data.time,\n      ReminderTime: data.reminder\n    }]);\n  };\n  const editEvent = (eventToBeEdited, newData) => {\n    setEvents(prev => prev.map(event => event === eventToBeEdited ? {\n      ...event,\n      title: newData.title,\n      desc: newData.desc,\n      EventTime: newData.time,\n      ReminderTime: newData.reminder\n    } : event));\n  };\n  const removeEvent = eventToBeDeleted => {\n    setEvents(prev => prev.filter(event => event.title !== eventToBeDeleted.title || event.date !== eventToBeDeleted.date));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calender, {\n      startingDate: new Date(),\n      eventsArr: events,\n      addEvent: addEvent,\n      editEvent: editEvent,\n      removeEvent: removeEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IssD0fcxr7ncf4BZehm1PYryZnM=\");\n_c = App;\nexport default App;\n// import './App.css';\n// import { Calender } from './Calender/calender';\n// import { MockEvents } from './Calender/const';\n// import { useState, useEffect } from 'react';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// function App() {\n//   const [events, setEvents] = useState(() => {\n//     const storedEvents = localStorage.getItem('events');\n//     return storedEvents ? JSON.parse(storedEvents) : MockEvents;\n//   });\n\n//   useEffect(() => {\n//     localStorage.setItem('events', JSON.stringify(events));\n//     const timeouts = [];\n\n//     // events.forEach((event) => {\n//     //   const [hours, minutes] = (event.reminderTime ?? \"\").split(\":\").map(Number);\n\n//     //   if (event.date) {\n//     //     const reminderTime = new Date(\n//     //       parseInt(event.date.slice(0, 4)),\n//     //       parseInt(event.date.slice(5, 7)) - 1,\n//     //       parseInt(event.date.slice(8, 10))\n//     //     );\n//     //     reminderTime.setHours(hours);\n//     //     reminderTime.setMinutes(minutes);\n\n//     //     if (reminderTime > new Date()) {\n//     //       const timeUntilEvent = reminderTime.getTime() - Date.now();\n\n//     //       const timeoutId = setTimeout(() => {\n//     //         toast.info(event.title + \"\\nReminder\");\n//     //         const index = timeouts.indexOf(timeoutId);\n//     //         if (index > -1) {\n//     //           timeouts.splice(index, 1);\n//     //         }\n//     //       }, timeUntilEvent);\n\n//     //       timeouts.push(timeoutId);\n//     //     }\n//     //   }\n//     // });\n\n//     // return () => {\n//     //   timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n//     // };\n//   }, [events]);\n\n//   const addEvent = (data, date) => {\n//     const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n//     setEvents((prev) => [...prev, { date: utcDate.toISOString(), title: data.title, desc: data.desc, reminderTime: data.reminderTime }]);\n//   };\n\n//   const editEvent = (eventToBeEdited, newData) => {\n//     setEvents((prev) =>\n//       prev.map((event) =>\n//         event === eventToBeEdited\n//           ? { ...event, title: newData.title, desc: newData.desc, reminderTime: newData.reminderTime }\n//           : event\n//       )\n//     );\n//   };\n\n//   const removeEvent = (eventToBeDeleted) => {\n//     setEvents((prev) => prev.filter(event => event.title !== eventToBeDeleted.title || event.date !== eventToBeDeleted.date || event.reminderTime !== eventToBeDeleted.reminderTime));\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <ToastContainer />\n//       <Calender startingDate={new Date()} eventsArr={events} addEvent={addEvent} editEvent={editEvent} removeEvent={removeEvent} />\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Calender","MockEvents","useState","useEffect","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","events","setEvents","storedEvents","localStorage","getItem","JSON","parse","setItem","stringify","timeouts","forEach","event","_event$reminderTime","hours","minutes","reminderTime","split","map","Number","date","Date","parseInt","slice","setHours","setMinutes","timeUntilEvent","getTime","now","timeoutId","setTimeout","info","title","index","indexOf","splice","push","clearTimeout","addEvent","data","utcDate","UTC","getFullYear","getMonth","getDate","prev","toISOString","desc","EventTime","time","ReminderTime","reminder","editEvent","eventToBeEdited","newData","removeEvent","eventToBeDeleted","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startingDate","eventsArr","_c","$RefreshReg$"],"sources":["C:/Users/pca158/Downloads/reacteventcalenderwithnotifications-main/reacteventcalenderwithnotifications-main/src/App.js"],"sourcesContent":["import './App.css';\nimport { Calender } from './Calender/calender';\nimport { MockEvents } from './Calender/const';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [events, setEvents] = useState(() => {\n    const storedEvents = localStorage.getItem('events');\n    return storedEvents ? JSON.parse(storedEvents) : MockEvents;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n    const timeouts = [];\n\n    events.forEach((event) => {\n      const [hours, minutes] = (event.reminderTime ?? \"\").split(\":\").map(Number);\n\n      if (event.date) {\n        const reminderTime = new Date(\n          parseInt(event.date.slice(0, 4)),\n          parseInt(event.date.slice(5, 7)) - 1,\n          parseInt(event.date.slice(8, 10))\n        );\n        reminderTime.setHours(hours);\n        reminderTime.setMinutes(minutes);\n\n        if (reminderTime > new Date()) {\n          const timeUntilEvent = reminderTime.getTime() - Date.now();\n\n          const timeoutId = setTimeout(() => {\n            toast.info(event.title + \"\\nReminder\");\n            const index = timeouts.indexOf(timeoutId);\n            if (index > -1) {\n              timeouts.splice(index, 1);\n            }\n          }, timeUntilEvent);\n\n          timeouts.push(timeoutId);\n        }\n      }\n    });\n\n    return () => {\n      timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n    };\n  }, [events]);\n\n  const addEvent = (data, date) => {\n    const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n    setEvents((prev) => [...prev, { date: utcDate.toISOString(), title: data.title, desc: data.desc, EventTime: data.time ,ReminderTime:data.reminder}]);\n  };\n\n  const editEvent = (eventToBeEdited, newData) => {\n    setEvents((prev) =>\n      prev.map((event) =>\n        event === eventToBeEdited\n          ? { ...event, title: newData.title, desc: newData.desc, EventTime: newData.time ,ReminderTime:newData.reminder}\n          : event\n      )\n    );\n  };\n\n  const removeEvent = (eventToBeDeleted) => {\n    setEvents((prev) => prev.filter(event => event.title !== eventToBeDeleted.title || event.date !== eventToBeDeleted.date ));\n  };\n\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Calender startingDate={new Date()} eventsArr={events} addEvent={addEvent} editEvent={editEvent} removeEvent={removeEvent} />\n    </div>\n  );\n}\n\nexport default App;\n// import './App.css';\n// import { Calender } from './Calender/calender';\n// import { MockEvents } from './Calender/const';\n// import { useState, useEffect } from 'react';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// function App() {\n//   const [events, setEvents] = useState(() => {\n//     const storedEvents = localStorage.getItem('events');\n//     return storedEvents ? JSON.parse(storedEvents) : MockEvents;\n//   });\n\n//   useEffect(() => {\n//     localStorage.setItem('events', JSON.stringify(events));\n//     const timeouts = [];\n\n//     // events.forEach((event) => {\n//     //   const [hours, minutes] = (event.reminderTime ?? \"\").split(\":\").map(Number);\n\n//     //   if (event.date) {\n//     //     const reminderTime = new Date(\n//     //       parseInt(event.date.slice(0, 4)),\n//     //       parseInt(event.date.slice(5, 7)) - 1,\n//     //       parseInt(event.date.slice(8, 10))\n//     //     );\n//     //     reminderTime.setHours(hours);\n//     //     reminderTime.setMinutes(minutes);\n\n//     //     if (reminderTime > new Date()) {\n//     //       const timeUntilEvent = reminderTime.getTime() - Date.now();\n\n//     //       const timeoutId = setTimeout(() => {\n//     //         toast.info(event.title + \"\\nReminder\");\n//     //         const index = timeouts.indexOf(timeoutId);\n//     //         if (index > -1) {\n//     //           timeouts.splice(index, 1);\n//     //         }\n//     //       }, timeUntilEvent);\n\n//     //       timeouts.push(timeoutId);\n//     //     }\n//     //   }\n//     // });\n\n//     // return () => {\n//     //   timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n//     // };\n//   }, [events]);\n\n//   const addEvent = (data, date) => {\n//     const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n//     setEvents((prev) => [...prev, { date: utcDate.toISOString(), title: data.title, desc: data.desc, reminderTime: data.reminderTime }]);\n//   };\n\n//   const editEvent = (eventToBeEdited, newData) => {\n//     setEvents((prev) =>\n//       prev.map((event) =>\n//         event === eventToBeEdited\n//           ? { ...event, title: newData.title, desc: newData.desc, reminderTime: newData.reminderTime }\n//           : event\n//       )\n//     );\n//   };\n\n//   const removeEvent = (eventToBeDeleted) => {\n//     setEvents((prev) => prev.filter(event => event.title !== eventToBeDeleted.title || event.date !== eventToBeDeleted.date || event.reminderTime !== eventToBeDeleted.reminderTime));\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <ToastContainer />\n//       <Calender startingDate={new Date()} eventsArr={events} addEvent={addEvent} editEvent={editEvent} removeEvent={removeEvent} />\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}