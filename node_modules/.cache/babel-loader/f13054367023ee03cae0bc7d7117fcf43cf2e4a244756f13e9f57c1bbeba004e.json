{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pca158\\\\Downloads\\\\reacteventcalenderwithnotifications-main\\\\reacteventcalenderwithnotifications-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Calender } from './Calender/calender';\nimport { MockEvents } from './Calender/const';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [events, setEvents] = useState(() => {\n    const storedEvents = localStorage.getItem('events');\n    return storedEvents ? JSON.parse(storedEvents) : MockEvents;\n  });\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n    const timeouts = [];\n\n    // events.forEach((event) => {\n    //   const [hours, minutes] = (event.reminderTime ?? \"\").split(\":\").map(Number);\n\n    //   if (event.date) {\n    //     const reminderTime = new Date(\n    //       parseInt(event.date.slice(0, 4)),\n    //       parseInt(event.date.slice(5, 7)) - 1,\n    //       parseInt(event.date.slice(8, 10))\n    //     );\n    //     reminderTime.setHours(hours);\n    //     reminderTime.setMinutes(minutes);\n\n    //     if (reminderTime > new Date()) {\n    //       const timeUntilEvent = reminderTime.getTime() - Date.now();\n\n    //       const timeoutId = setTimeout(() => {\n    //         toast.info(event.title + \"\\nReminder\");\n    //         const index = timeouts.indexOf(timeoutId);\n    //         if (index > -1) {\n    //           timeouts.splice(index, 1);\n    //         }\n    //       }, timeUntilEvent);\n\n    //       timeouts.push(timeoutId);\n    //     }\n    //   }\n    // });\n\n    // return () => {\n    //   timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n    // };\n  }, [events]);\n  const addEvent = (data, date) => {\n    const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n    setEvents(prev => [...prev, {\n      date: utcDate.toISOString(),\n      title: data.title,\n      desc: data.desc,\n      reminderTime: data.reminderTime\n    }]);\n  };\n  const editEvent = (eventToBeEdited, newData) => {\n    setEvents(prev => prev.map(event => event === eventToBeEdited ? {\n      ...event,\n      title: newData.title,\n      desc: newData.desc,\n      reminderTime: newData.reminderTime\n    } : event));\n  };\n  const removeEvent = eventToBeDeleted => {\n    setEvents(prev => prev.filter(event => event.title !== eventToBeDeleted.title || event.date !== eventToBeDeleted.date || event.reminderTime !== eventToBeDeleted.reminderTime));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calender, {\n      startingDate: new Date(),\n      eventsArr: events,\n      addEvent: addEvent,\n      editEvent: editEvent,\n      removeEvent: removeEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IssD0fcxr7ncf4BZehm1PYryZnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Calender","MockEvents","useState","useEffect","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","events","setEvents","storedEvents","localStorage","getItem","JSON","parse","setItem","stringify","timeouts","addEvent","data","date","utcDate","Date","UTC","getFullYear","getMonth","getDate","prev","toISOString","title","desc","reminderTime","editEvent","eventToBeEdited","newData","map","event","removeEvent","eventToBeDeleted","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startingDate","eventsArr","_c","$RefreshReg$"],"sources":["C:/Users/pca158/Downloads/reacteventcalenderwithnotifications-main/reacteventcalenderwithnotifications-main/src/App.js"],"sourcesContent":["import './App.css';\nimport { Calender } from './Calender/calender';\nimport { MockEvents } from './Calender/const';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [events, setEvents] = useState(() => {\n    const storedEvents = localStorage.getItem('events');\n    return storedEvents ? JSON.parse(storedEvents) : MockEvents;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n    const timeouts = [];\n\n    // events.forEach((event) => {\n    //   const [hours, minutes] = (event.reminderTime ?? \"\").split(\":\").map(Number);\n\n    //   if (event.date) {\n    //     const reminderTime = new Date(\n    //       parseInt(event.date.slice(0, 4)),\n    //       parseInt(event.date.slice(5, 7)) - 1,\n    //       parseInt(event.date.slice(8, 10))\n    //     );\n    //     reminderTime.setHours(hours);\n    //     reminderTime.setMinutes(minutes);\n\n    //     if (reminderTime > new Date()) {\n    //       const timeUntilEvent = reminderTime.getTime() - Date.now();\n\n    //       const timeoutId = setTimeout(() => {\n    //         toast.info(event.title + \"\\nReminder\");\n    //         const index = timeouts.indexOf(timeoutId);\n    //         if (index > -1) {\n    //           timeouts.splice(index, 1);\n    //         }\n    //       }, timeUntilEvent);\n\n    //       timeouts.push(timeoutId);\n    //     }\n    //   }\n    // });\n\n    // return () => {\n    //   timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n    // };\n  }, [events]);\n\n  const addEvent = (data, date) => {\n    const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n    setEvents((prev) => [...prev, { date: utcDate.toISOString(), title: data.title, desc: data.desc, reminderTime: data.reminderTime }]);\n  };\n\n  const editEvent = (eventToBeEdited, newData) => {\n    setEvents((prev) =>\n      prev.map((event) =>\n        event === eventToBeEdited\n          ? { ...event, title: newData.title, desc: newData.desc, reminderTime: newData.reminderTime }\n          : event\n      )\n    );\n  };\n\n  const removeEvent = (eventToBeDeleted) => {\n    setEvents((prev) => prev.filter(event => event.title !== eventToBeDeleted.title || event.date !== eventToBeDeleted.date || event.reminderTime !== eventToBeDeleted.reminderTime));\n  };\n\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Calender startingDate={new Date()} eventsArr={events} addEvent={addEvent} editEvent={editEvent} removeEvent={removeEvent} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}