{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pca158\\\\Downloads\\\\reacteventcalenderwithnotifications-main\\\\reacteventcalenderwithnotifications-main\\\\src\\\\Calender\\\\calender.js\",\n  _s = $RefreshSig$();\n// import {\n//   Wrapper,\n//   CalenderHead,\n//   SevenColGrid,\n//   HeadDay,\n//   CalenderBody,\n//   StyledDay,\n//   StyledEvent\n// } from './styled'\n// import 'bootstrap/dist/css/bootstrap.min.css'\n// import * as Icon from 'react-bootstrap-icons'\n// import { Days, MONTHS } from './const'\n// import {\n//   range,\n//   getDaysInMonth,\n//   getSortedDays,\n//   areDatesTheSame,\n//   getDateobj\n// } from './util'\n// import { useState, useEffect } from 'react'\n// import { EventModal } from './addEventModal/addEventModal'\n// import './addEventModal/addEventModal.css'\n\n// export const Calender = ({\n//   startingDate,\n//   eventsArr,\n//   addEvent,\n//   editEvent,\n//   removeEvent\n// }) => {\n//   const [currentMonth, setCurrentMonth] = useState(startingDate.getMonth())\n//   const [currentYear, setCurrentYear] = useState(startingDate.getFullYear())\n//   const DaysInMonth = getDaysInMonth(currentMonth, currentYear)\n//   const [selectedDay, setSelectedDay] = useState(new Date().getDay())\n//   const [selectedEvent, setSelectedEvent] = useState(null)\n//   const [eventForm, setEventForm] = useState({\n//     title: '',\n//     time: '',\n//     reminderTime: '' // Add the 'reminderTime' property\n//   });\n\n//   const [showDeleteButton, setShowDeleteButton] = useState(false)\n\n//   const [Modal, setModal] = useState(false)\n\n//   const toggelModal = () => {\n//     setModal(!Modal)\n//   }\n\n//   const nextMonth = () => {\n//     if (currentMonth < 11) {\n//       setCurrentMonth(prev => prev + 1)\n//     } else {\n//       setCurrentMonth(0)\n//       setCurrentYear(prev => prev + 1)\n//     }\n//   }\n\n//   const prevMonth = () => {\n//     if (currentMonth > 0) {\n//       setCurrentMonth(prev => prev - 1)\n//     } else {\n//       setCurrentMonth(11)\n//       setCurrentYear(prev => prev - 1)\n//     }\n//   }\n\n//   const loadData = thisevent => {\n//     const eventOnDay = eventsArr.find(\n//       event =>\n//         event.title === thisevent.title &&\n//         event.date === thisevent.date &&\n//         event.reminderTime === thisevent.reminderTime\n//     )\n//     setEventForm(eventOnDay || null)\n//     setSelectedEvent(eventOnDay || null)\n//   }\n//   const onAddEditEvent = (event, data, selectedDay) => {\n//     event.preventDefault();\n//     if (selectedEvent) {\n//       editEvent(selectedEvent, data);\n//       setSelectedEvent(null);\n//     } else {\n//       addEvent(data, selectedDay);\n//     }\n//     toggelModal();\n//     setEventForm(null);\n//   };\n\n//   const onRemoveEvent = eventToBeDel => {\n//     removeEvent(eventToBeDel)\n//     toggelModal()\n//     setEventForm(null)\n//     setSelectedEvent(null)\n//   }\n\n//   return (\n//     <Wrapper>\n//       <CalenderHead>\n//         <Icon.ArrowLeftCircleFill onClick={prevMonth} />\n//         <p className='m-0'>\n//           {MONTHS[currentMonth]} {currentYear}\n//         </p>\n//         <Icon.ArrowRightCircleFill onClick={nextMonth} />\n//       </CalenderHead>\n//       <SevenColGrid>\n//         {getSortedDays(currentMonth, currentYear).map(day => (\n//           <HeadDay>{day}</HeadDay>\n//         ))}\n//       </SevenColGrid>\n//       <CalenderBody fourCol={DaysInMonth === 28}>\n//         {range(DaysInMonth).map(day => {\n//           const dateObj = getDateobj(day, currentMonth, currentYear)\n//           const isCurrentDate = areDatesTheSame(new Date(), dateObj)\n//           const eventsOnDate = eventsArr.filter(event =>\n//             areDatesTheSame(dateObj, event.date)\n//           )\n//           return (\n//             <>\n//               <StyledDay\n//                 onClick={e => {\n//                   setSelectedDay(getDateobj(day, currentMonth, currentYear))\n//                   setEventForm(null)\n//                   setShowDeleteButton(false)\n//                   setSelectedEvent(null) // Clear the selectedEvent state for new events\n//                   toggelModal()\n//                 }}\n//                 active={areDatesTheSame(\n//                   new Date(),\n//                   getDateobj(day, currentMonth, currentYear)\n//                 )}\n//               >\n//                 <p>{day}</p>\n//                 {eventsArr.map(\n//                   event =>\n//                     areDatesTheSame(\n//                       getDateobj(day, currentMonth, currentYear),\n//                       event.date\n//                     ) && (\n//                       <StyledEvent>\n//                         <span\n//                           className='w-100 text-start'\n//                           type='button'\n//                           onClick={e => {\n//                             e.stopPropagation()\n//                             loadData(event)\n//                             setShowDeleteButton(true)\n//                             toggelModal()\n//                           }}\n//                         >\n//                           {event.title}\n//                         </span>\n//                       </StyledEvent>\n//                     )\n//                 )}\n//               </StyledDay>\n//               {Modal && (\n//                 <div className='modal'>\n//                   <div onClick={toggelModal} className='overlay'>\n//                     <div\n//                       className='modal-content'\n//                       onClick={e => e.stopPropagation()}\n//                     >\n//                       <h4 className='form-heading'>\n//                         {selectedEvent ? 'Edit Event' : 'Add Event'}\n//                       </h4>\n\n//                       <button\n//                         type='button'\n//                         className='close-btn'\n//                         onClick={toggelModal}\n//                       >\n//                         <Icon.XLg />\n//                       </button>\n\n//                       <form>\n//                       <div className='form-group mb-3'>\n//     <h4>\n//       <label className='form-label'>Title</label>\n//     </h4>\n//     <input\n//       type='text'\n//       className='form-control'\n//       value={eventForm?.title || ''}\n//       onChange={e =>\n//         setEventForm({\n//           ...eventForm,\n//           title: e.target.value\n//         })\n//       }\n//     />\n//   </div>\n\n//   <div className='form-group mb-3'>\n//     <h4>\n//       <label className='form-label'>Time</label>\n//     </h4>\n//     <input\n//       type='time'\n//       className='form-control'\n//       value={eventForm?.time || ''}\n//       onChange={e =>\n//         setEventForm({\n//           ...eventForm,\n//           time: e.target.value\n//         })\n//       }\n//     />\n//   </div>\n//   <div className='form-group mb-3'>\n//   <h4>\n//     <label className='form-label'>Reminder Time</label>\n//   </h4>\n//   <input\n//     type='time'\n//     className='form-control'\n//     value={eventForm?.reminderTime || ''}\n//     onChange={e =>\n//       setEventForm({\n//         ...eventForm,\n//         reminderTime: e.target.value\n//       })\n//     }\n//   />\n// </div>\n\n//                         {/* ... */}\n//                         <div className='d-flex justify-content-end'>\n//                           <button\n//                             className='save-event'\n//                             disabled={!eventForm?.title} // Disable the button if the title is not filled\n//                             style={{ opacity: eventForm?.title ? 1 : 0.5, cursor: eventForm?.title ? 'pointer' : 'not-allowed' }}\n//                             onClick={e => {\n//                               e.stopPropagation()\n//                               onAddEditEvent(e, eventForm, selectedDay)\n//                             }}\n//                           >\n//                             Save\n//                           </button>\n\n//                           {showDeleteButton && (\n//                             <button\n//                               className='delete-btn'\n//                               onClick={e => {\n//                                 e.stopPropagation()\n//                                 onRemoveEvent(eventForm)\n//                               }}\n//                             >\n//                               Delete\n//                             </button>\n//                           )}\n//                         </div>\n//                       </form>\n//                     </div>\n//                   </div>\n//                 </div>\n//               )}\n//             </>\n//           )\n//         })}\n//       </CalenderBody>\n//     </Wrapper>\n//   )\n// }\nimport { Wrapper, CalenderHead, SevenColGrid, HeadDay, CalenderBody, StyledDay, StyledEvent } from './styled';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Icon from 'react-bootstrap-icons';\nimport { Days, MONTHS } from './const';\nimport { range, getDaysInMonth, getSortedDays, areDatesTheSame, getDateobj } from './util';\nimport { useState, useEffect, useRef } from 'react';\nimport { EventModal } from './addEventModal/addEventModal';\nimport './addEventModal/addEventModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Calender = _ref => {\n  _s();\n  let {\n    startingDate,\n    eventsArr,\n    addEvent,\n    editEvent,\n    removeEvent,\n    remindersArr,\n    removeReminder,\n    snoozeForReminder\n  } = _ref;\n  const [currentMonth, setCurrentMonth] = useState(startingDate.getMonth());\n  const [currentYear, setCurrentYear] = useState(startingDate.getFullYear());\n  const DaysInMonth = getDaysInMonth(currentMonth, currentYear);\n  const [selectedDay, setSelectedDay] = useState(new Date().getDay());\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [eventForm, setEventForm] = useState(null);\n  const [reminderModal, setReminderModal] = useState(false);\n  const [showDeleteButton, setShowDeleteButton] = useState(false);\n  const reminderSelectRef = useRef(null);\n  const [Modal, setModal] = useState(false);\n  const toggelModal = () => {\n    setModal(!Modal);\n  };\n  const toggelReminderModal = () => {\n    setReminderModal(!reminderModal);\n  };\n  const nextMonth = () => {\n    if (currentMonth < 11) {\n      setCurrentMonth(prev => prev + 1);\n    } else {\n      setCurrentMonth(0);\n      setCurrentYear(prev => prev + 1);\n    }\n  };\n  const prevMonth = () => {\n    if (currentMonth > 0) {\n      setCurrentMonth(prev => prev - 1);\n    } else {\n      setCurrentMonth(11);\n      setCurrentYear(prev => prev - 1);\n    }\n  };\n  const loadData = thisevent => {\n    const eventOnDay = eventsArr.find(event => event.title === thisevent.title && event.date === thisevent.date && event.reminderTime === thisevent.reminderTime);\n    setEventForm(eventOnDay || null);\n    setSelectedEvent(eventOnDay);\n  };\n  const onAddEditEvent = (event, data, selectedDay, reminderVal) => {\n    event.preventDefault();\n    if (eventForm === null) {\n      // Handle the case when eventForm is null\n      setEventForm(null);\n      return;\n    }\n    const [eventHours, eventMinutes] = data.eventTime.split(':').map(Number);\n    const eventTime = new Date(selectedDay.getFullYear(),\n    // Year\n    selectedDay.getMonth(),\n    // Month (0-based)\n    selectedDay.getDate() // Day\n    );\n\n    eventTime.setHours(eventHours);\n    eventTime.setMinutes(eventMinutes);\n    const reminderTimeDate = new Date(eventTime.getTime() - reminderVal * 60000);\n    if (reminderVal !== '') {\n      if (reminderTimeDate < new Date()) {\n        alert('Please select a reminder value greater than the current time!!');\n      } else {\n        if (selectedEvent) {\n          editEvent(selectedEvent, data, selectedDay, reminderTimeDate);\n          setSelectedEvent(null);\n        } else {\n          addEvent(data, selectedDay, reminderTimeDate);\n        }\n        toggelModal();\n        setEventForm(null);\n      }\n    } else {\n      alert('Please select a reminder value!!');\n    }\n  };\n  const onRemoveEvent = eventToBeDel => {\n    removeEvent(eventToBeDel);\n    toggelModal();\n    setEventForm(null);\n    setSelectedEvent(null);\n  };\n  const dismissReminder = reminder => {\n    removeReminder(reminder);\n  };\n  const convertMilliseconds = milliseconds => {\n    const seconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const remainingHours = hours % 24;\n    const remainingMinutes = minutes % 60;\n    let result = '';\n    if (days > 0) {\n      result += `${days} day(s) `;\n    }\n    if (remainingHours > 0) {\n      result += `${remainingHours} hr `;\n    }\n    if (remainingMinutes > 0) {\n      result += `${remainingMinutes} min`;\n    }\n    return result.trim();\n  };\n\n  // moment library\n\n  const snoozeReminder = (reminder, snoozeVal) => {\n    // var snoozeValinmillisec;\n    const eventTime = new Date(parseInt(reminder.eventFullDate.slice(0, 4)), parseInt(reminder.eventFullDate.slice(5, 7)) - 1, parseInt(reminder.eventFullDate.slice(8, 10)), parseInt(reminder.eventFullDate.slice(11, 13)), parseInt(reminder.eventFullDate.slice(14, 16)));\n    const snoozeTime = new Date(eventTime.getTime() - snoozeVal * 60000);\n    // if(snoozeTime > new Date()){\n\n    //     console.log(snoozeTime)\n    // }\n\n    if (snoozeVal != '') {\n      // snoozeValinmillisec = parseInt(snoozeVal) * 60000;\n      if (snoozeTime < new Date()) {\n        alert('not possible');\n      } else {\n        // alert(\"all ok\");\n        snoozeForReminder(reminder, snoozeTime);\n        toggelReminderModal();\n      }\n    } else {\n      alert('please select snooze val!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(CalenderHead, {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 d-flex justify-content-around align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Icon.ArrowLeftCircleFill, {\n          onClick: prevMonth,\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0 fs-3\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [MONTHS[currentMonth], \" \", currentYear]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Icon.ArrowRightCircleFill, {\n          onClick: nextMonth,\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SevenColGrid, {\n      children: getSortedDays(currentMonth, currentYear).map(day => /*#__PURE__*/_jsxDEV(HeadDay, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalenderBody, {\n      fourCol: DaysInMonth === 28,\n      children: range(DaysInMonth).map(day => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(StyledDay\n          // onClick={(e) => onAddEvent(e, getDateobj(day, currentMonth, currentYear))}\n          , {\n            onClick: e => {\n              setSelectedDay(getDateobj(day, currentMonth, currentYear));\n              setEventForm(null);\n              setShowDeleteButton(false);\n              toggelModal();\n            },\n            active: areDatesTheSame(new Date(), getDateobj(day, currentMonth, currentYear)),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"current-day\",\n                children: day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), eventsArr.map(event => areDatesTheSame(getDateobj(day, currentMonth, currentYear), event.date) && /*#__PURE__*/_jsxDEV(StyledEvent, {\n              color: event.color,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"w-100 text-start\",\n                type: \"button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  setSelectedDay(getDateobj(day, currentMonth, currentYear));\n                  loadData(event);\n                  setShowDeleteButton(true);\n                  toggelModal();\n                },\n                children: event.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this), Modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setSelectedEvent(null);\n          toggelModal();\n        },\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"form-heading\",\n            children: \"Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"close-btn\",\n            onClick: () => {\n              setSelectedEvent(null);\n              toggelModal();\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon.XLg, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), showDeleteButton && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: e => {\n              e.stopPropagation();\n              onRemoveEvent(eventForm);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: eventForm ? eventForm.title : '',\n                onChange: e => setEventForm({\n                  ...eventForm,\n                  title: e.target.value\n                }),\n                type: \"text\",\n                placeholder: \"Event Tilte\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Event Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: eventForm ? eventForm.eventTime : '',\n                onChange: e => setEventForm({\n                  ...eventForm,\n                  eventTime: e.target.value\n                }),\n                type: \"text\",\n                placeholder: \"hh:mm\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Reminder Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control form-select me-4 reminder-select\",\n                \"aria-label\": \"Default select example\",\n                ref: reminderSelectRef,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"REMINDER Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"5\",\n                  children: \"5 min before\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10\",\n                  children: \"10 min before\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"15\",\n                  children: \"15 min before\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"20\",\n                  children: \"20 min before\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"25\",\n                  children: \"25 min before\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"30\",\n                  children: \"30 min before\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"60\",\n                  children: \"1 hr before\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1440\",\n                  children: \"1 day before\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10080\",\n                  children: \"1 week before\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-event\",\n                onClick: e => {\n                  e.stopPropagation();\n                  console.log();\n                  onAddEditEvent(e, eventForm, selectedDay, reminderSelectRef.current.value);\n                },\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n};\n_s(Calender, \"fiTyfVUtGVJe6uqPQjhFwMT6Dcw=\");\n_c = Calender;\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["Wrapper","CalenderHead","SevenColGrid","HeadDay","CalenderBody","StyledDay","StyledEvent","Icon","Days","MONTHS","range","getDaysInMonth","getSortedDays","areDatesTheSame","getDateobj","useState","useEffect","useRef","EventModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Calender","_ref","_s","startingDate","eventsArr","addEvent","editEvent","removeEvent","remindersArr","removeReminder","snoozeForReminder","currentMonth","setCurrentMonth","getMonth","currentYear","setCurrentYear","getFullYear","DaysInMonth","selectedDay","setSelectedDay","Date","getDay","selectedEvent","setSelectedEvent","eventForm","setEventForm","reminderModal","setReminderModal","showDeleteButton","setShowDeleteButton","reminderSelectRef","Modal","setModal","toggelModal","toggelReminderModal","nextMonth","prev","prevMonth","loadData","thisevent","eventOnDay","find","event","title","date","reminderTime","onAddEditEvent","data","reminderVal","preventDefault","eventHours","eventMinutes","eventTime","split","map","Number","getDate","setHours","setMinutes","reminderTimeDate","getTime","alert","onRemoveEvent","eventToBeDel","dismissReminder","reminder","convertMilliseconds","milliseconds","seconds","Math","floor","minutes","hours","days","remainingHours","remainingMinutes","result","trim","snoozeReminder","snoozeVal","parseInt","eventFullDate","slice","snoozeTime","children","className","ArrowLeftCircleFill","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","ArrowRightCircleFill","day","fourCol","e","active","color","stopPropagation","XLg","value","onChange","target","placeholder","required","ref","console","log","current","_c","$RefreshReg$"],"sources":["C:/Users/pca158/Downloads/reacteventcalenderwithnotifications-main/reacteventcalenderwithnotifications-main/src/Calender/calender.js"],"sourcesContent":["// import {\r\n//   Wrapper,\r\n//   CalenderHead,\r\n//   SevenColGrid,\r\n//   HeadDay,\r\n//   CalenderBody,\r\n//   StyledDay,\r\n//   StyledEvent\r\n// } from './styled'\r\n// import 'bootstrap/dist/css/bootstrap.min.css'\r\n// import * as Icon from 'react-bootstrap-icons'\r\n// import { Days, MONTHS } from './const'\r\n// import {\r\n//   range,\r\n//   getDaysInMonth,\r\n//   getSortedDays,\r\n//   areDatesTheSame,\r\n//   getDateobj\r\n// } from './util'\r\n// import { useState, useEffect } from 'react'\r\n// import { EventModal } from './addEventModal/addEventModal'\r\n// import './addEventModal/addEventModal.css'\r\n\r\n// export const Calender = ({\r\n//   startingDate,\r\n//   eventsArr,\r\n//   addEvent,\r\n//   editEvent,\r\n//   removeEvent\r\n// }) => {\r\n//   const [currentMonth, setCurrentMonth] = useState(startingDate.getMonth())\r\n//   const [currentYear, setCurrentYear] = useState(startingDate.getFullYear())\r\n//   const DaysInMonth = getDaysInMonth(currentMonth, currentYear)\r\n//   const [selectedDay, setSelectedDay] = useState(new Date().getDay())\r\n//   const [selectedEvent, setSelectedEvent] = useState(null)\r\n//   const [eventForm, setEventForm] = useState({\r\n//     title: '',\r\n//     time: '',\r\n//     reminderTime: '' // Add the 'reminderTime' property\r\n//   });\r\n\r\n//   const [showDeleteButton, setShowDeleteButton] = useState(false)\r\n\r\n//   const [Modal, setModal] = useState(false)\r\n\r\n//   const toggelModal = () => {\r\n//     setModal(!Modal)\r\n//   }\r\n\r\n//   const nextMonth = () => {\r\n//     if (currentMonth < 11) {\r\n//       setCurrentMonth(prev => prev + 1)\r\n//     } else {\r\n//       setCurrentMonth(0)\r\n//       setCurrentYear(prev => prev + 1)\r\n//     }\r\n//   }\r\n\r\n//   const prevMonth = () => {\r\n//     if (currentMonth > 0) {\r\n//       setCurrentMonth(prev => prev - 1)\r\n//     } else {\r\n//       setCurrentMonth(11)\r\n//       setCurrentYear(prev => prev - 1)\r\n//     }\r\n//   }\r\n\r\n//   const loadData = thisevent => {\r\n//     const eventOnDay = eventsArr.find(\r\n//       event =>\r\n//         event.title === thisevent.title &&\r\n//         event.date === thisevent.date &&\r\n//         event.reminderTime === thisevent.reminderTime\r\n//     )\r\n//     setEventForm(eventOnDay || null)\r\n//     setSelectedEvent(eventOnDay || null)\r\n//   }\r\n//   const onAddEditEvent = (event, data, selectedDay) => {\r\n//     event.preventDefault();\r\n//     if (selectedEvent) {\r\n//       editEvent(selectedEvent, data);\r\n//       setSelectedEvent(null);\r\n//     } else {\r\n//       addEvent(data, selectedDay);\r\n//     }\r\n//     toggelModal();\r\n//     setEventForm(null);\r\n//   };\r\n\r\n//   const onRemoveEvent = eventToBeDel => {\r\n//     removeEvent(eventToBeDel)\r\n//     toggelModal()\r\n//     setEventForm(null)\r\n//     setSelectedEvent(null)\r\n//   }\r\n\r\n//   return (\r\n//     <Wrapper>\r\n//       <CalenderHead>\r\n//         <Icon.ArrowLeftCircleFill onClick={prevMonth} />\r\n//         <p className='m-0'>\r\n//           {MONTHS[currentMonth]} {currentYear}\r\n//         </p>\r\n//         <Icon.ArrowRightCircleFill onClick={nextMonth} />\r\n//       </CalenderHead>\r\n//       <SevenColGrid>\r\n//         {getSortedDays(currentMonth, currentYear).map(day => (\r\n//           <HeadDay>{day}</HeadDay>\r\n//         ))}\r\n//       </SevenColGrid>\r\n//       <CalenderBody fourCol={DaysInMonth === 28}>\r\n//         {range(DaysInMonth).map(day => {\r\n//           const dateObj = getDateobj(day, currentMonth, currentYear)\r\n//           const isCurrentDate = areDatesTheSame(new Date(), dateObj)\r\n//           const eventsOnDate = eventsArr.filter(event =>\r\n//             areDatesTheSame(dateObj, event.date)\r\n//           )\r\n//           return (\r\n//             <>\r\n//               <StyledDay\r\n//                 onClick={e => {\r\n//                   setSelectedDay(getDateobj(day, currentMonth, currentYear))\r\n//                   setEventForm(null)\r\n//                   setShowDeleteButton(false)\r\n//                   setSelectedEvent(null) // Clear the selectedEvent state for new events\r\n//                   toggelModal()\r\n//                 }}\r\n//                 active={areDatesTheSame(\r\n//                   new Date(),\r\n//                   getDateobj(day, currentMonth, currentYear)\r\n//                 )}\r\n//               >\r\n//                 <p>{day}</p>\r\n//                 {eventsArr.map(\r\n//                   event =>\r\n//                     areDatesTheSame(\r\n//                       getDateobj(day, currentMonth, currentYear),\r\n//                       event.date\r\n//                     ) && (\r\n//                       <StyledEvent>\r\n//                         <span\r\n//                           className='w-100 text-start'\r\n//                           type='button'\r\n//                           onClick={e => {\r\n//                             e.stopPropagation()\r\n//                             loadData(event)\r\n//                             setShowDeleteButton(true)\r\n//                             toggelModal()\r\n//                           }}\r\n//                         >\r\n//                           {event.title}\r\n//                         </span>\r\n//                       </StyledEvent>\r\n//                     )\r\n//                 )}\r\n//               </StyledDay>\r\n//               {Modal && (\r\n//                 <div className='modal'>\r\n//                   <div onClick={toggelModal} className='overlay'>\r\n//                     <div\r\n//                       className='modal-content'\r\n//                       onClick={e => e.stopPropagation()}\r\n//                     >\r\n//                       <h4 className='form-heading'>\r\n//                         {selectedEvent ? 'Edit Event' : 'Add Event'}\r\n//                       </h4>\r\n\r\n//                       <button\r\n//                         type='button'\r\n//                         className='close-btn'\r\n//                         onClick={toggelModal}\r\n//                       >\r\n//                         <Icon.XLg />\r\n//                       </button>\r\n\r\n//                       <form>\r\n//                       <div className='form-group mb-3'>\r\n//     <h4>\r\n//       <label className='form-label'>Title</label>\r\n//     </h4>\r\n//     <input\r\n//       type='text'\r\n//       className='form-control'\r\n//       value={eventForm?.title || ''}\r\n//       onChange={e =>\r\n//         setEventForm({\r\n//           ...eventForm,\r\n//           title: e.target.value\r\n//         })\r\n//       }\r\n//     />\r\n//   </div>\r\n\r\n//   <div className='form-group mb-3'>\r\n//     <h4>\r\n//       <label className='form-label'>Time</label>\r\n//     </h4>\r\n//     <input\r\n//       type='time'\r\n//       className='form-control'\r\n//       value={eventForm?.time || ''}\r\n//       onChange={e =>\r\n//         setEventForm({\r\n//           ...eventForm,\r\n//           time: e.target.value\r\n//         })\r\n//       }\r\n//     />\r\n//   </div>\r\n//   <div className='form-group mb-3'>\r\n//   <h4>\r\n//     <label className='form-label'>Reminder Time</label>\r\n//   </h4>\r\n//   <input\r\n//     type='time'\r\n//     className='form-control'\r\n//     value={eventForm?.reminderTime || ''}\r\n//     onChange={e =>\r\n//       setEventForm({\r\n//         ...eventForm,\r\n//         reminderTime: e.target.value\r\n//       })\r\n//     }\r\n//   />\r\n// </div>\r\n\r\n//                         {/* ... */}\r\n//                         <div className='d-flex justify-content-end'>\r\n//                           <button\r\n//                             className='save-event'\r\n//                             disabled={!eventForm?.title} // Disable the button if the title is not filled\r\n//                             style={{ opacity: eventForm?.title ? 1 : 0.5, cursor: eventForm?.title ? 'pointer' : 'not-allowed' }}\r\n//                             onClick={e => {\r\n//                               e.stopPropagation()\r\n//                               onAddEditEvent(e, eventForm, selectedDay)\r\n//                             }}\r\n//                           >\r\n//                             Save\r\n//                           </button>\r\n\r\n//                           {showDeleteButton && (\r\n//                             <button\r\n//                               className='delete-btn'\r\n//                               onClick={e => {\r\n//                                 e.stopPropagation()\r\n//                                 onRemoveEvent(eventForm)\r\n//                               }}\r\n//                             >\r\n//                               Delete\r\n//                             </button>\r\n//                           )}\r\n//                         </div>\r\n//                       </form>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </>\r\n//           )\r\n//         })}\r\n//       </CalenderBody>\r\n//     </Wrapper>\r\n//   )\r\n// }\r\nimport {\r\n  Wrapper,\r\n  CalenderHead,\r\n  SevenColGrid,\r\n  HeadDay,\r\n  CalenderBody,\r\n  StyledDay,\r\n  StyledEvent\r\n} from './styled'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport { Days, MONTHS } from './const'\r\nimport {\r\n  range,\r\n  getDaysInMonth,\r\n  getSortedDays,\r\n  areDatesTheSame,\r\n  getDateobj\r\n} from './util'\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { EventModal } from './addEventModal/addEventModal'\r\nimport './addEventModal/addEventModal.css'\r\n\r\nexport const Calender = ({\r\n  startingDate,\r\n  eventsArr,\r\n  addEvent,\r\n  editEvent,\r\n  removeEvent,\r\n  remindersArr,\r\n  removeReminder,\r\n  snoozeForReminder\r\n}) => {\r\n  const [currentMonth, setCurrentMonth] = useState(startingDate.getMonth())\r\n  const [currentYear, setCurrentYear] = useState(startingDate.getFullYear())\r\n  const DaysInMonth = getDaysInMonth(currentMonth, currentYear)\r\n  const [selectedDay, setSelectedDay] = useState(new Date().getDay())\r\n  const [selectedEvent, setSelectedEvent] = useState(null)\r\n  const [eventForm, setEventForm] = useState(null)\r\n  const [reminderModal, setReminderModal] = useState(false)\r\n  const [showDeleteButton, setShowDeleteButton] = useState(false)\r\n  const reminderSelectRef = useRef(null)\r\n\r\n  const [Modal, setModal] = useState(false)\r\n\r\n  const toggelModal = () => {\r\n    setModal(!Modal)\r\n  }\r\n\r\n  const toggelReminderModal = () => {\r\n    setReminderModal(!reminderModal)\r\n  }\r\n\r\n  const nextMonth = () => {\r\n    if (currentMonth < 11) {\r\n      setCurrentMonth(prev => prev + 1)\r\n    } else {\r\n      setCurrentMonth(0)\r\n      setCurrentYear(prev => prev + 1)\r\n    }\r\n  }\r\n\r\n  const prevMonth = () => {\r\n    if (currentMonth > 0) {\r\n      setCurrentMonth(prev => prev - 1)\r\n    } else {\r\n      setCurrentMonth(11)\r\n      setCurrentYear(prev => prev - 1)\r\n    }\r\n  }\r\n\r\n  const loadData = thisevent => {\r\n    const eventOnDay = eventsArr.find(\r\n      event =>\r\n        event.title === thisevent.title &&\r\n        event.date === thisevent.date &&\r\n        event.reminderTime === thisevent.reminderTime\r\n    )\r\n    setEventForm(eventOnDay || null)\r\n    setSelectedEvent(eventOnDay)\r\n  }\r\n  const onAddEditEvent = (event, data, selectedDay, reminderVal) => {\r\n    event.preventDefault();\r\n  \r\n    if (eventForm === null) {\r\n      // Handle the case when eventForm is null\r\n      setEventForm(null);\r\n      return;\r\n    }\r\n  \r\n    const [eventHours, eventMinutes] = data.eventTime.split(':').map(Number);\r\n    const eventTime = new Date(\r\n      selectedDay.getFullYear(), // Year\r\n      selectedDay.getMonth(), // Month (0-based)\r\n      selectedDay.getDate() // Day\r\n    );\r\n    eventTime.setHours(eventHours);\r\n    eventTime.setMinutes(eventMinutes);\r\n  \r\n    const reminderTimeDate = new Date(eventTime.getTime() - reminderVal * 60000);\r\n    if (reminderVal !== '') {\r\n      if (reminderTimeDate < new Date()) {\r\n        alert('Please select a reminder value greater than the current time!!');\r\n      } else {\r\n        if (selectedEvent) {\r\n          editEvent(selectedEvent, data, selectedDay, reminderTimeDate);\r\n          setSelectedEvent(null);\r\n        } else {\r\n          addEvent(data, selectedDay, reminderTimeDate);\r\n        }\r\n        toggelModal();\r\n        setEventForm(null);\r\n      }\r\n    } else {\r\n      alert('Please select a reminder value!!');\r\n    }\r\n  };\r\n  \r\n\r\n  const onRemoveEvent = eventToBeDel => {\r\n    removeEvent(eventToBeDel)\r\n    toggelModal()\r\n    setEventForm(null)\r\n    setSelectedEvent(null)\r\n  }\r\n\r\n  const dismissReminder = reminder => {\r\n    removeReminder(reminder)\r\n  }\r\n\r\n  const convertMilliseconds = milliseconds => {\r\n    const seconds = Math.floor(milliseconds / 1000)\r\n    const minutes = Math.floor(seconds / 60)\r\n    const hours = Math.floor(minutes / 60)\r\n    const days = Math.floor(hours / 24)\r\n    const remainingHours = hours % 24\r\n    const remainingMinutes = minutes % 60\r\n\r\n    let result = ''\r\n\r\n    if (days > 0) {\r\n      result += `${days} day(s) `\r\n    }\r\n    if (remainingHours > 0) {\r\n      result += `${remainingHours} hr `\r\n    }\r\n    if (remainingMinutes > 0) {\r\n      result += `${remainingMinutes} min`\r\n    }\r\n\r\n    return result.trim()\r\n  }\r\n\r\n  // moment library\r\n\r\n  const snoozeReminder = (reminder, snoozeVal) => {\r\n    // var snoozeValinmillisec;\r\n    const eventTime = new Date(\r\n      parseInt(reminder.eventFullDate.slice(0, 4)),\r\n      parseInt(reminder.eventFullDate.slice(5, 7)) - 1,\r\n      parseInt(reminder.eventFullDate.slice(8, 10)),\r\n      parseInt(reminder.eventFullDate.slice(11, 13)),\r\n      parseInt(reminder.eventFullDate.slice(14, 16))\r\n    )\r\n\r\n    const snoozeTime = new Date(eventTime.getTime() - snoozeVal * 60000)\r\n    // if(snoozeTime > new Date()){\r\n\r\n    //     console.log(snoozeTime)\r\n    // }\r\n\r\n    if (snoozeVal != '') {\r\n      // snoozeValinmillisec = parseInt(snoozeVal) * 60000;\r\n      if (snoozeTime < new Date()) {\r\n        alert('not possible')\r\n      } else {\r\n        // alert(\"all ok\");\r\n        snoozeForReminder(reminder, snoozeTime)\r\n        toggelReminderModal()\r\n      }\r\n    } else {\r\n      alert('please select snooze val!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CalenderHead className='row'>\r\n        <div className='col-8 d-flex justify-content-around align-items-center'>\r\n          <Icon.ArrowLeftCircleFill onClick={prevMonth} type='button' />\r\n          <p className='mb-0 fs-3'>\r\n            <strong>\r\n              {MONTHS[currentMonth]} {currentYear}\r\n            </strong>\r\n          </p>\r\n          <Icon.ArrowRightCircleFill onClick={nextMonth} type='button' />\r\n        </div>\r\n        {/* <div className=\"col-4 d-flex justify-content-end border-start border-2\">\r\n                  <button className=\"reminder-btn d-flex align-items-center position-relative\" onClick={toggelReminderModal}>\r\n                      <span className=\"remd-num me-2\">{remindersArr.length}</span>\r\n                      <Icon.Bell className=\"me-2\" />\r\n                      <p className=\"mb-0\">Reminder</p>\r\n                  </button>\r\n                  {\r\n                      reminderModal &&\r\n                      <div className=\"modal\">\r\n                          <div onClick={toggelReminderModal} className=\"overlay\">\r\n                              <div className=\"remd-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                                  <div className=\"d-flex justify-content-start form-heading align-items-center\">\r\n                                      <div className=\"position-relative\">\r\n                                          <Icon.Bell className=\"me-3 fs-2\" />\r\n                                          <span className=\"remd-num-badge text-center\">{remindersArr.length}</span>\r\n                                      </div>\r\n                                      <h4 className=\"mb-0\">Reminder</h4>\r\n                                  </div>\r\n                                  <button type=\"button\" className=\"close-btn\" onClick={toggelReminderModal}><Icon.XLg /></button>\r\n                                  <div className=\"modal-body\">\r\n                                      {remindersArr.length > 0 ?\r\n                                          (remindersArr.map((reminder, index) =>\r\n                                              <div key={index} className=\"p-2 border-bottom border-2\">\r\n                                                  <div className=\"d-flex justify-content-between \">\r\n                                                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                                                          <Icon.Calendar3 className=\"me-3\" />\r\n                                                          <p className=\"mb-0\">\"{reminder.title}\" event</p>\r\n                                                      </div>\r\n                                                      <small>starts in {convertMilliseconds(reminder.remainingTime)} minutes</small>\r\n                                                  </div>\r\n                                                  <div className=\"d-flex justify-content-between my-3\">\r\n                                                      <div className=\"d-flex justify-content-start\">\r\n                                                          <select className=\"form-select me-4 snooze-select\" aria-label=\"Default select example\">\r\n                                                              <option value=\"\">-----snooze-----</option>\r\n                                                             \r\n                                                              <option value=\"5\">5 min before</option>\r\n                                                              <option value=\"10\">10 min before</option>\r\n                                                              <option value=\"15\">15 min before</option>\r\n                                                              <option value=\"20\">20 min before</option>\r\n                                                              <option value=\"25\">25 min before</option>\r\n                                                              <option value=\"30\">30 min before</option>\r\n                                                             \r\n                                                          </select>\r\n                                                          <button className=\"snooze-btn\" onClick={(e) => {\r\n                                                              e.stopPropagation();\r\n                                                              snoozeReminder(reminder, e.target.parentNode.querySelector('.snooze-select').value);\r\n                                                              ;\r\n                                                          }}>Snooze</button>\r\n                                                      </div>\r\n                                                      <button className=\"dissmiss-btn\" onClick={(e) => {\r\n                                                          e.stopPropagation();\r\n                                                          dismissReminder(reminder);\r\n                                                      }}>Dissmiss</button>\r\n                                                  </div>\r\n                                              </div>\r\n                                          )) :\r\n                                          (\r\n                                              <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\r\n                                                  <p>No reminders yet</p>\r\n                                              </div>\r\n                                          )\r\n                                      }\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  }\r\n              </div> */}\r\n      </CalenderHead>\r\n      <SevenColGrid>\r\n        {getSortedDays(currentMonth, currentYear).map(day => (\r\n          <HeadDay>\r\n            <strong>{day}</strong>\r\n          </HeadDay>\r\n        ))}\r\n      </SevenColGrid>\r\n      <CalenderBody fourCol={DaysInMonth === 28}>\r\n        {range(DaysInMonth).map(day => {\r\n          return (\r\n            <>\r\n              <StyledDay\r\n                // onClick={(e) => onAddEvent(e, getDateobj(day, currentMonth, currentYear))}\r\n                onClick={e => {\r\n                  setSelectedDay(getDateobj(day, currentMonth, currentYear))\r\n                  setEventForm(null)\r\n                  setShowDeleteButton(false)\r\n                  toggelModal()\r\n                }}\r\n                active={areDatesTheSame(\r\n                  new Date(),\r\n                  getDateobj(day, currentMonth, currentYear)\r\n                )}\r\n              >\r\n                <div className='mb-2'>\r\n                  <strong className='current-day'>{day}</strong>\r\n                </div>\r\n                {eventsArr.map(\r\n                  event =>\r\n                    areDatesTheSame(\r\n                      getDateobj(day, currentMonth, currentYear),\r\n                      event.date\r\n                    ) && (\r\n                      <StyledEvent color={event.color}>\r\n                        <span\r\n                          className='w-100 text-start'\r\n                          type='button'\r\n                          onClick={e => {\r\n                            e.stopPropagation()\r\n                            setSelectedDay(\r\n                              getDateobj(day, currentMonth, currentYear)\r\n                            )\r\n                            loadData(event)\r\n                            setShowDeleteButton(true)\r\n                            toggelModal()\r\n                          }}\r\n                        >\r\n                          {event.title}\r\n                        </span>\r\n                      </StyledEvent>\r\n                    )\r\n                )}\r\n              </StyledDay>\r\n            </>\r\n          )\r\n        })}\r\n      </CalenderBody>\r\n      {Modal && (\r\n        <div className='modal'>\r\n          <div\r\n            onClick={() => {\r\n              setSelectedEvent(null)\r\n              toggelModal()\r\n            }}\r\n            className='overlay'\r\n          >\r\n            <div className='modal-content' onClick={e => e.stopPropagation()}>\r\n              <h4 className='form-heading'>Event</h4>\r\n              <button\r\n                type='button'\r\n                className='close-btn'\r\n                onClick={() => {\r\n                  setSelectedEvent(null)\r\n                  toggelModal()\r\n                }}\r\n              >\r\n                <Icon.XLg />\r\n              </button>\r\n              {\r\n                                showDeleteButton &&\r\n                                <button className=\"delete-btn\" onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    onRemoveEvent(eventForm);\r\n                                }}>delete</button>\r\n                            }\r\n              <form>\r\n                <div className='form-group mb-3'>\r\n                  <label className='form-label'>Title</label>\r\n                  <input\r\n                    className='form-control'\r\n                    value={eventForm ? eventForm.title : ''}\r\n                    onChange={e =>\r\n                      setEventForm({ ...eventForm, title: e.target.value })\r\n                    }\r\n                    type='text'\r\n                    placeholder='Event Tilte'\r\n                    required\r\n                  ></input>\r\n                </div>\r\n\r\n                <div className='form-group mb-3'>\r\n                  <label className='form-label'>Event Time</label>\r\n                  <input\r\n                    className='form-control'\r\n                    value={eventForm ? eventForm.eventTime : ''}\r\n                    onChange={e =>\r\n                      setEventForm({ ...eventForm, eventTime: e.target.value })\r\n                    }\r\n                    type='text'\r\n                    placeholder='hh:mm'\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className='form-group mb-3'>\r\n                  <label className='form-label'>Reminder Time</label>\r\n                  <select\r\n                    className='form-control form-select me-4 reminder-select'\r\n                    aria-label='Default select example'\r\n                    ref={reminderSelectRef}\r\n                  >\r\n                    <option value=''>REMINDER Time</option>\r\n                    <option value='5'>5 min before</option>\r\n                    <option value='10'>10 min before</option>\r\n                    <option value='15'>15 min before</option>\r\n                    <option value='20'>20 min before</option>\r\n                    <option value='25'>25 min before</option>\r\n                    <option value='30'>30 min before</option>\r\n                    <option value='60'>1 hr before</option>\r\n                    <option value='1440'>1 day before</option>\r\n                    <option value='10080'>1 week before</option>\r\n                  </select>\r\n                  {/* <input className=\"form-control\" value={eventForm ? eventForm.reminderTime : \"\"} onChange={(e) => setEventForm({ ...eventForm, reminderTime: e.target.value })} type=\"text\" placeholder=\"hh:mm\" required></input> */}\r\n                </div>\r\n\r\n                <div className='d-flex justify-content-end'>\r\n                  <button\r\n                    className='save-event'\r\n                    onClick={e => {\r\n                      e.stopPropagation()\r\n                      console.log()\r\n                      onAddEditEvent(\r\n                        e,\r\n                        eventForm,\r\n                        selectedDay,\r\n                        reminderSelectRef.current.value\r\n                      )\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}