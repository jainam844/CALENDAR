{"ast":null,"code":"// import { Days } from \"./const\";\n\n// export const range = (end) => {\n//     const { result } = Array.from({ length: end }).reduce(({ result, current }) => ({\n//         result: [...result, current],\n//         current: current + 1\n//     }), { result: [], current: 1 })\n\n//     return result;\n// }\n\n// export const getDaysInMonth = (month, year) => {\n//     return new Date(year, month + 1, 0).getDate();\n// }\n\n// export const getSortedDays = (month, year) => {\n//     const dayIndex = new Date(year, month, 1).getDay();\n//     return [...Days.slice(dayIndex), ...Days.slice(0, dayIndex)];\n// }\n\n// export const getDateobj = (day, month, year) => {\n//     return new Date(year, month, day);\n// }\n\n// export const areDatesTheSame = (first, second) => {\n//     const   secondDate = new Date(second);\n//     return (\n//         first.getFullYear() === secondDate.getFullYear() &&\n//         first.getMonth() === secondDate.getMonth() &&\n//         first.getDate() === secondDate.getDate()\n//     );\n// } \n\n//  // useEffect(() => {\n//     //     // Check for events and schedule notifications\n//     //     eventsArr.forEach((event) => {\n//     //         const eventDate = new Date(event.date);\n//     //         if (eventDate > new Date()) {\n//     //             const timeUntilEvent = eventDate.getTime() - Date.now();\n//     //             setTimeout(() => {\n//     //                 console.log(event.title);\n//     //             }, timeUntilEvent);\n//     //         }\n//     //     });\n//     // }, [eventsArr]);","map":{"version":3,"names":[],"sources":["C:/Users/pca158/Downloads/reacteventcalenderwithnotifications-main/reacteventcalenderwithnotifications-main/src/Calender/util.js"],"sourcesContent":["// import { Days } from \"./const\";\r\n\r\n// export const range = (end) => {\r\n//     const { result } = Array.from({ length: end }).reduce(({ result, current }) => ({\r\n//         result: [...result, current],\r\n//         current: current + 1\r\n//     }), { result: [], current: 1 })\r\n\r\n//     return result;\r\n// }\r\n\r\n// export const getDaysInMonth = (month, year) => {\r\n//     return new Date(year, month + 1, 0).getDate();\r\n// }\r\n\r\n// export const getSortedDays = (month, year) => {\r\n//     const dayIndex = new Date(year, month, 1).getDay();\r\n//     return [...Days.slice(dayIndex), ...Days.slice(0, dayIndex)];\r\n// }\r\n\r\n// export const getDateobj = (day, month, year) => {\r\n//     return new Date(year, month, day);\r\n// }\r\n\r\n// export const areDatesTheSame = (first, second) => {\r\n//     const   secondDate = new Date(second);\r\n//     return (\r\n//         first.getFullYear() === secondDate.getFullYear() &&\r\n//         first.getMonth() === secondDate.getMonth() &&\r\n//         first.getDate() === secondDate.getDate()\r\n//     );\r\n// } \r\n\r\n//  // useEffect(() => {\r\n//     //     // Check for events and schedule notifications\r\n//     //     eventsArr.forEach((event) => {\r\n//     //         const eventDate = new Date(event.date);\r\n//     //         if (eventDate > new Date()) {\r\n//     //             const timeUntilEvent = eventDate.getTime() - Date.now();\r\n//     //             setTimeout(() => {\r\n//     //                 console.log(event.title);\r\n//     //             }, timeUntilEvent);\r\n//     //         }\r\n//     //     });\r\n//     // }, [eventsArr]);"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}