{"ast":null,"code":"import { Days } from \"./const\";\nexport const range = end => {\n  const {\n    result\n  } = Array.from({\n    length: end\n  }).reduce(_ref => {\n    let {\n      result,\n      current\n    } = _ref;\n    return {\n      result: [...result, current],\n      current: current + 1\n    };\n  }, {\n    result: [],\n    current: 1\n  });\n  return result;\n};\nexport const getDaysInMonth = (month, year) => {\n  return new Date(year, month + 1, 0).getDate();\n};\n\n// export const getSortedDays = (month, year) => {\n//     const dayIndex = new Date(year, month, 1).getDay();\n//     return [...Days.slice(dayIndex), ...Days.slice(0, dayIndex)];\n// }\n\nexport const getDateobj = (day, month, year) => {\n  return new Date(year, month, day);\n};\nexport const areDatesTheSame = (first, second) => {\n  const secondDate = new Date(second);\n  return first.getFullYear() === secondDate.getFullYear() && first.getMonth() === secondDate.getMonth() && first.getDate() === secondDate.getDate();\n};\n\n// useEffect(() => {\n//     // Check for events and schedule notifications\n//     eventsArr.forEach((event) => {\n//         const eventDate = new Date(event.date);\n//         if (eventDate > new Date()) {\n//             const timeUntilEvent = eventDate.getTime() - Date.now();\n//             setTimeout(() => {\n//                 console.log(event.title);\n//             }, timeUntilEvent);\n//         }\n//     });\n// }, [eventsArr]);\nexport const getSortedDays = date => {\n  const DaysInMonth = range(getDaysInMonth(date));\n  const index = new Date(date.getFullYear(), date.getMonth());\n};","map":{"version":3,"names":["Days","range","end","result","Array","from","length","reduce","_ref","current","getDaysInMonth","month","year","Date","getDate","getDateobj","day","areDatesTheSame","first","second","secondDate","getFullYear","getMonth","getSortedDays","date","DaysInMonth","index"],"sources":["C:/Users/pca158/Downloads/reacteventcalenderwithnotifications-main/reacteventcalenderwithnotifications-main/src/Calender/util.js"],"sourcesContent":["import { Days } from \"./const\";\r\n\r\nexport const range = (end) => {\r\n    const { result } = Array.from({ length: end }).reduce(({ result, current }) => ({\r\n        result: [...result, current],\r\n        current: current + 1\r\n    }), { result: [], current: 1 })\r\n\r\n    return result;\r\n}\r\n\r\nexport const getDaysInMonth = (month, year) => {\r\n    return new Date(year, month + 1, 0).getDate();\r\n}\r\n\r\n// export const getSortedDays = (month, year) => {\r\n//     const dayIndex = new Date(year, month, 1).getDay();\r\n//     return [...Days.slice(dayIndex), ...Days.slice(0, dayIndex)];\r\n// }\r\n\r\nexport const getDateobj = (day, month, year) => {\r\n    return new Date(year, month, day);\r\n}\r\n\r\nexport const areDatesTheSame = (first, second) => {\r\n    const   secondDate = new Date(second);\r\n    return (\r\n        first.getFullYear() === secondDate.getFullYear() &&\r\n        first.getMonth() === secondDate.getMonth() &&\r\n        first.getDate() === secondDate.getDate()\r\n    );\r\n} \r\n\r\n // useEffect(() => {\r\n    //     // Check for events and schedule notifications\r\n    //     eventsArr.forEach((event) => {\r\n    //         const eventDate = new Date(event.date);\r\n    //         if (eventDate > new Date()) {\r\n    //             const timeUntilEvent = eventDate.getTime() - Date.now();\r\n    //             setTimeout(() => {\r\n    //                 console.log(event.title);\r\n    //             }, timeUntilEvent);\r\n    //         }\r\n    //     });\r\n    // }, [eventsArr]);\r\nexport const getSortedDays =(date)=>{\r\n\r\nconst DaysInMonth =range(getDaysInMonth(date));\r\nconst index= new Date(date.getFullYear(),date.getMonth(),)\r\n}"],"mappings":"AAAA,SAASA,IAAI,QAAQ,SAAS;AAE9B,OAAO,MAAMC,KAAK,GAAIC,GAAG,IAAK;EAC1B,MAAM;IAAEC;EAAO,CAAC,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEJ;EAAI,CAAC,CAAC,CAACK,MAAM,CAACC,IAAA;IAAA,IAAC;MAAEL,MAAM;MAAEM;IAAQ,CAAC,GAAAD,IAAA;IAAA,OAAM;MAC5EL,MAAM,EAAE,CAAC,GAAGA,MAAM,EAAEM,OAAO,CAAC;MAC5BA,OAAO,EAAEA,OAAO,GAAG;IACvB,CAAC;EAAA,CAAC,EAAE;IAAEN,MAAM,EAAE,EAAE;IAAEM,OAAO,EAAE;EAAE,CAAC,CAAC;EAE/B,OAAON,MAAM;AACjB,CAAC;AAED,OAAO,MAAMO,cAAc,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EAC3C,OAAO,IAAIC,IAAI,CAACD,IAAI,EAAED,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;AACjD,CAAC;;AAED;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGA,CAACC,GAAG,EAAEL,KAAK,EAAEC,IAAI,KAAK;EAC5C,OAAO,IAAIC,IAAI,CAACD,IAAI,EAAED,KAAK,EAAEK,GAAG,CAAC;AACrC,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC9C,MAAQC,UAAU,GAAG,IAAIP,IAAI,CAACM,MAAM,CAAC;EACrC,OACID,KAAK,CAACG,WAAW,CAAC,CAAC,KAAKD,UAAU,CAACC,WAAW,CAAC,CAAC,IAChDH,KAAK,CAACI,QAAQ,CAAC,CAAC,KAAKF,UAAU,CAACE,QAAQ,CAAC,CAAC,IAC1CJ,KAAK,CAACJ,OAAO,CAAC,CAAC,KAAKM,UAAU,CAACN,OAAO,CAAC,CAAC;AAEhD,CAAC;;AAEA;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ,OAAO,MAAMS,aAAa,GAAGC,IAAI,IAAG;EAEpC,MAAMC,WAAW,GAAExB,KAAK,CAACS,cAAc,CAACc,IAAI,CAAC,CAAC;EAC9C,MAAME,KAAK,GAAE,IAAIb,IAAI,CAACW,IAAI,CAACH,WAAW,CAAC,CAAC,EAACG,IAAI,CAACF,QAAQ,CAAC,CAAE,CAAC;AAC1D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}